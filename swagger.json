{
    "openapi": "3.0.0",
    "info": {
        "version": "0.0.1",
        "title": "Swagger Petly ",
        "description": "API Documents for Petly Server"
    },
    "consumes": ["application/json", "multipart/form-data"],
    "produces": ["application/json"],
    "servers": [{ "url": "http://localhost:4000/api" }],
    "tags": [
        {
            "name": "Auth",
            "description": "register, login, logout"
        },
        {
            "name": "Services Sidebar",
            "description": "our friends"
        },
        {
            "name": "News",
            "description": "news"
        },
        {
            "name": "Notices",
            "description": "receiving, adding and deleting ads"
        },
        {
            "name": "User",
            "description": "my account with my pets, update user data, update pet data, add new my pet, delete my pet"
        }
    ],

    "paths": {
        "/auth/register": {
            "post": {
                "tags": ["Auth"],
                "summary": "User registration",
                "parameters": [],
                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful registration",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {}
                    },
                    "409": {
                        "description": "Email already exists",
                        "content": {}
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "User login",
                "parameters": [],
                "requestBody": {
                    "description": "User's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid request body)",
                        "content": {}
                    },
                    "401": {
                        "description": "Email or password incorrect",
                        "content": {}
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": ["Auth"],
                "summary": "Logout user",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "204": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LogoutResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    }
                }
            }
        },

        "/user": {
            "get": {
                "tags": ["User"],
                "summary": "User info and your pets info",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Saccses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserInfoResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {}
                    }
                }
            },
            "patch": {
                "tags": ["User"],
                "summary": "Update user info",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "User's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Saccses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateUserResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {}
                    }
                }
            }
        },
        "/user/pet": {
            "post": {
                "tags": ["User"],
                "summary": "Add User's pet",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "Pet object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddPetRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Create",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AddPetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {}
                    }
                }
            }
        },
        "/user/{petId}": {
            "delete": {
                "tags": ["User"],
                "summary": "Delete User's pet",
                "parameters": [
                    {
                        "in": "path",
                        "name": "petId",
                        "required": true,
                        "type": "string",
                        "description": "Users pets ID"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Saccses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemovePetResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not valid ID",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },

        "/friends ": {
            "get": {
                "tags": ["Services Sidebar"],
                "summary": "Our friends",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FriendsResponse"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },

        "/news": {
            "get": {
                "tags": ["News"],
                "summary": "News",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "news search by keyword",
                        "required": false,
                        "type": "string"
                    }
                ],

                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NewsResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    },
                    "500": {
                        "description": "Server error",
                        "content": {}
                    }
                }
            }
        },

        "/notices/{category}": {
            "get": {
                "tags": ["Notices"],
                "summary": "Notices by category",
                "parameters": [
                    {
                        "in": "path",
                        "name": "category",
                        "required": false,
                        "description": "Category list: [sell, lost-found, for-free]",
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "query",
                        "required": false,
                        "description": "search by keyword",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "page",
                        "required": false,
                        "description": "page number",
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "limit",
                        "required": false,
                        "description": "number of notices per page",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetNoticeByCategoryResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    }
                }
            }
        },
        "/notices": {
            "post": {
                "tags": ["Notices"],
                "summary": "Add notices",
                "parameters": [],
                "security": [{ "Bearer": [] }],
                "requestBody": {
                    "description": "New notices",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NoticeAddRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Create",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NoticeAddResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {}
                    }
                }
            },
            "get": {
                "tags": ["Notices"],
                "summary": "Get all users notices",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "required": false,
                        "description": "search by keyword",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "page",
                        "required": false,
                        "description": "page number",
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "limit",
                        "required": false,
                        "description": "number of notices per page",
                        "type": "integer"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Saccess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetUserNoticesResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {}
                    }
                }
            }
        },
        "/notices/getOne/{noticeId}": {
            "get": {
                "tags": ["Notices"],
                "summary": "Get one notice by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "noticeId",
                        "required": true,
                        "description": "Notice Id",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetOneNoticeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not valid id",
                        "content": {}
                    }
                }
            }
        },
         "/notices/{noticeId}": {
            "delete": {
                "tags": ["Notices"],
                "summary": "Delete notice by ID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "noticeId",
                        "required": true,
                        "description": "Notice Id",
                        "type": "string"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RemoveNoticeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not valid ID",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {}
                    },
                    "404": {
                        "description": "Not found",
                        "content": {}
                    }
                }
            }
        },
        "/notices/myFavorite": {
            "get": {
                "tags": ["Notices"],
                "summary": "Get all user's favorite notices",
                "parameters": [
                    {
                        "in": "query",
                        "name": "query",
                        "required": false,
                        "description": "search by keyword",
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "page",
                        "required": false,
                        "description": "page number",
                        "type": "integer"
                    },
                    {
                        "in": "path",
                        "name": "limit",
                        "required": false,
                        "description": "number of notices per page",
                        "type": "integer"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Saccess",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GetFavoriteNoticesResponse"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {}
                    }
                }
            }
        },
        "/notices/favorite/{noticeId}": {
            "patch": {
                "tags": ["Notices"],
                "summary": "Add notice to favorite",
                "parameters": [
                    {
                        "in": "path",
                        "name": "noticeId",
                        "required": true,
                        "description": "Notice Id",
                        "type": "string"
                    }
                ],
                "security": [{ "Bearer": [] }],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateFavoriteNoticeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Not valid ID",
                        "content": {}
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {}
                    },
                    "403": {
                        "description": "Invalid token",
                        "content": {}
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {}
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegistrationRequest": {
                "type": "object",
                "required": ["email", "password", "name", "city", "phone"],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qwerty123"
                    },
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Mango"
                    },
                    "phone": {
                        "type": "string",
                        "description": "User's phone",
                        "format": "phone",
                        "example": "+380000000000"
                    },
                    "city": {
                        "type": "string",
                        "description": "User's city and region",
                        "example": "Brovary, Kyiv"
                    }
                }
            },
            "RegistrationResponse": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Mango"
                    },
                    "phone": {
                        "type": "string",
                        "description": "User's phone",
                        "format": "phone",
                        "example": "+380000000000"
                    },
                    "city": {
                        "type": "string",
                        "description": "User's city and region",
                        "example": "Brovary, Kyiv"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "created",
                        "example": "2023-02-01T13:49:03.447Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "updated",
                        "example": "2023-02-01T13:49:03.447Z"
                    }
                }
            },
            "LoginRequest": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "example": "qwerty123"
                    }
                }
            },
            "LoginResponse": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Mango"
                    },
                    "token": {
                        "type": "string",
                        "description": "User's token",
                        "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzYjJiN2VlYmNlZjEzOGRmZTkxOGU3MyIsImlhdCI6MTY3Mjg0OTUzNiwiZXhwIjoxNjcyODc4MzM2fQ.2O1A2OFCpuH00pMM1GgA-Dhy1kKCNEHDd80LrAyE8ac"
                    }
                }
            },
            "LogoutResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Logout message",
                        "example": "Logout successful"
                    }
                }
            },

            "UserInfoResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "string",
                                "description": "user id",
                                "example": "63b2b7eebcef138dfe918e73"
                            },
                            "email": {
                                "type": "string",
                                "description": "User's email",
                                "format": "email"
                            },
                            "name": {
                                "type": "string",
                                "description": "User's name",
                                "example": "Mango"
                            },
                            "phone": {
                                "type": "string",
                                "description": "User's phone",
                                "format": "phone",
                                "example": "+380000000000"
                            },
                            "city": {
                                "type": "string",
                                "description": "User's city and region",
                                "example": "Brovary, Kyiv"
                            },
                            "birthday": {
                                "type": "string",
                                "description": "User birthday",
                                "example": "01.01.1999"
                            },
                            "avatarURL": {
                                "type": "string",
                                "description": "User avatar",
                                "example": "https://as1.ftcdn.net/v2/jpg/02/59/39/46/1000_F_259394679_GGA8JJAEkukYJL9XXFH2JoC3nMguBPNH.jpg"
                            },
                            "createdAt": {
                                "type": "string",
                                "description": "created",
                                "example": "2023-02-01T13:49:03.447Z"
                            },
                            "updatedAt": {
                                "type": "string",
                                "description": "updated",
                                "example": "2023-02-01T13:49:03.447Z"
                            }
                        }
                    },
                    "pets": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "description": "id",
                                    "example": "63b548d5471bb460e28dc813"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Pet name",
                                    "example": "Roky"
                                },
                                "birthday": {
                                    "type": "string",
                                    "description": "Pet of birthday",
                                    "example": "01.01.2022"
                                },
                                "breed": {
                                    "type": "string",
                                    "description": "Breed of dogs",
                                    "example": "beagle"
                                },
                                "avatarURL": {
                                    "type": "string",
                                    "description": "image pet",
                                    "example": "https://www.akc.org/wp-content/uploads/2016/06/Beagle-standing-in-a-frosty-field-on-a-cold-morning.jpg"
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "comments",
                                    "example": "Beagles were bred for hunting"
                                },
                                "owner": {
                                    "type": "string",
                                    "description": "ID owner",
                                    "example": "63b2b7eebcef138dfe918e73"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "description": "created",
                                    "example": "2023-02-01T13:49:03.447Z"
                                },
                                "updatedAt": {
                                    "type": "string",
                                    "description": "updated",
                                    "example": "2023-02-01T13:49:03.447Z"
                                }
                            }
                        }
                    }
                }
            },
            "UpdateUserRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Mango"
                    },
                    "phone": {
                        "type": "string",
                        "description": "User's phone",
                        "format": "phone",
                        "example": "+380000000000"
                    },
                    "city": {
                        "type": "string",
                        "description": "User's city and region",
                        "example": "Brovary, Kyiv"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "User birthday",
                        "example": "01.01.1999"
                    },
                    "avatarURL": {
                        "type": "string",
                        "description": "User avatar",
                        "example": "https://as1.ftcdn.net/v2/jpg/02/59/39/46/1000_F_259394679_GGA8JJAEkukYJL9XXFH2JoC3nMguBPNH.jpg"
                    }
                }
            },
            "UpdateUserResponse": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "description": "User's email",
                        "format": "email"
                    },
                    "name": {
                        "type": "string",
                        "description": "User's name",
                        "example": "Mango"
                    },
                    "phone": {
                        "type": "string",
                        "description": "User's phone",
                        "format": "phone",
                        "example": "+380000000000"
                    },
                    "city": {
                        "type": "string",
                        "description": "User's city and region",
                        "example": "Brovary, Kyiv"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "User birthday",
                        "example": "01.01.1999"
                    },
                    "avatarURL": {
                        "type": "string",
                        "description": "User avatar",
                        "example": "https://as1.ftcdn.net/v2/jpg/02/59/39/46/1000_F_259394679_GGA8JJAEkukYJL9XXFH2JoC3nMguBPNH.jpg"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "created",
                        "example": "2023-02-01T13:49:03.447Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "updated",
                        "example": "2023-02-01T13:49:03.447Z"
                    }
                }
            },
            "AddPetRequest": {
                "type": "object",
                "required": [
                    "name",
                    "birthday",
                    "breed",
                    "coments"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Pet name",
                        "example": "Roky"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "Pet of birthday",
                        "example": "01.01.2022"
                    },
                    "breed": {
                        "type": "string",
                        "description": "Breed of dogs",
                        "example": "beagle"
                    },
                    "photoURL": {
                        "type": "string",
                        "description": "image pet",
                        "example": "https://www.akc.org/wp-content/uploads/2016/06/Beagle-standing-in-a-frosty-field-on-a-cold-morning.jpg"
                    },
                    "comments": {
                        "type": "string",
                        "description": "comments",
                        "example": "Selling a smart dog."
                    }
                }
            },
            "AddPetResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "id",
                        "example": "63b548d5471bb460e28dc813"
                    },
                    "name": {
                        "type": "string",
                        "description": "Pet name",
                        "example": "Rocky"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "Pet of birthday",
                        "example": "01.01.2022"
                    },
                    "breed": {
                        "type": "string",
                        "description": "Breed of dogs",
                        "example": "beagle"
                    },
                    "photoURL": {
                        "type": "string",
                        "description": "image pet",
                        "example": "https://www.akc.org/wp-content/uploads/2016/06/Beagle-standing-in-a-frosty-field-on-a-cold-morning.jpg"
                    },
                    "comments": {
                        "type": "string",
                        "description": "comments",
                        "example": "Selling a smart dog."
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "created",
                        "example": "2023-02-01T13:49:03.447Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "updated",
                        "example": "2023-02-01T13:49:03.447Z"
                    }
                }
            },
            "RemovePetResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "message",
                        "example": "The pet 'Roky' has been removed"
                    }
                }
            },

            "FriendsResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "id",
                        "example": "63d6d644668d0100c66b9e0e"
                    },
                    "title": {
                        "type": "string",
                        "description": "title",
                        "example": "Happy Paw"
                    },
                    "url": {
                        "type": "string",
                        "description": "url",
                        "example": "https://happypaw.ua/ua"
                    },
                    "addressUrl": {
                        "type": "string",
                        "description": "addressUrl",
                        "example": "https://goo.gl/maps/3RyzTYBvMr9WQWCC6"
                    },
                    "imageUrl": {
                        "type": "string",
                        "description": "imageUrl",
                        "example": "https://storage.googleapis.com/kidslikev2_bucket/pets-support/images/sponsors/frame_288.png"
                    },
                    "address": {
                        "type": "string",
                        "description": "address",
                        "example": "Київ, вулиця Шота Руставелі, 44 (3-й поверх, офіс 7)"
                    },
                    "workDays": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "isOpen": {
                                    "type": "boolean",
                                    "description": "isOpen",
                                    "example": "true"
                                },
                                "from": {
                                    "type": "string",
                                    "description": "opens at",
                                    "example": "09:00"
                                },
                                "to": {
                                    "type": "string",
                                    "description": "closes at",
                                    "example": "17:00"
                                }
                            },
                            "example": [
                                {
                                    "isOpen": true,
                                    "from": "09:00",
                                    "to": "17:00"
                                },
                                {
                                    "isOpen": true,
                                    "from": "09:00",
                                    "to": "17:00"
                                },
                                {
                                    "isOpen": true,
                                    "from": "09:00",
                                    "to": "17:00"
                                },
                                {
                                    "isOpen": true,
                                    "from": "09:00",
                                    "to": "17:00"
                                },
                                {
                                    "isOpen": true,
                                    "from": "09:00",
                                    "to": "17:00"
                                },
                                {
                                    "isOpen": true,
                                    "from": "09:00",
                                    "to": "17:00"
                                },
                                {
                                    "isOpen": true,
                                    "from": "09:00",
                                    "to": "17:00"
                                }
                            ]
                        }
                    },
                    "phone": {
                        "type": "string",
                        "description": "phone",
                        "format": "phone",
                        "example": "+380442900329"
                    },
                    "email": {
                        "type": "string",
                        "description": "email",
                        "format": "email",
                        "example": "hello@happypaw.ua"
                    }
                }
            },

            "NewsResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "id",
                        "example": "63d6d660668d0100c66b9e1a"
                    },
                    "title": {
                        "type": "string",
                        "description": "title",
                        "example": "Обережно, кліщі! Як уберегти улюбленця від неприємностей?"
                    },
                    "url": {
                        "type": "string",
                        "description": "url",
                        "example": "https://www.kmlvm.com.ua/oberezhno-klishhi-yak-uberegty-ulyublentsya-vid-nepryyemnostej/"
                    },
                    "description": {
                        "type": "string",
                        "description": "description",
                        "example": "Травневі прогулянки з улюбленцем не лише приємні, але й потребують пильності. З початком теплої пори року активізуються кліщі, і треба бути уважним, щоб уберегти свого песика чи котика від дуже серйозних неприємностей зі здоров`ям. Чим небезпечні кліщі? Кліщі переносять збудника паразитарного захворювання крові. Якщо тварина показує ознаки укусу кліщем – слід негайно звернутися до лікаря, зволікання може коштувати життя тварині. Які ознаки укусу кліща? Слід мерщій звернутися до ветеринара, якщо ви помітили що тварина: стала млявою, постійно лежить відмовляється від їжі її сеча стала темного кольору. Захворювання крові, яке виникає після укусу кліща, лікується, проте важливе значення має час. І профілактика, до речі, щоб убезпечити котика чи песика від таких неприємностей, можна використати наступні засоби: краплі на холку, спреї, спеціальні нашийники, пігулки."
                    },
                    "date": {
                        "type": "string",
                        "description": "date",
                        "example": "2022-05-04"
                    }
                }
            },

            "GetNoticeByCategoryResponse": {
                "type": "object",
                "properties": {
                    "notices": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "_id": {
                                    "type": "string",
                                    "description": "id",
                                    "example": "63b548d5471bb460e28dc813"
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Category by notice",
                                    "example": "sell"
                                },
                                "title": {
                                    "type": "string",
                                    "description": "Title by notice",
                                    "example": "Rocky is looking for a new family"
                                },
                                "name": {
                                    "type": "string",
                                    "description": "Pet name",
                                    "example": "Rocky"
                                },
                                "birthday": {
                                    "type": "data",
                                    "description": "Pet of birthday",
                                    "example": "01.01.2022"
                                },
                                "breed": {
                                    "type": "string",
                                    "description": "Breed of dogs",
                                    "example": "beagle"
                                },
                                "sex": {
                                    "type": "string",
                                    "description": "Sex list: [male, female]",
                                    "example": "female"
                                },
                                "place": {
                                    "type": "string",
                                    "description": "Pet location",
                                    "example": "Kyiv, Ukraine"
                                },
                                "price": {
                                    "type": "integer",
                                    "description": "Price",
                                    "example": 5000
                                },
                                "photoURL": {
                                    "type": "string",
                                    "description": "Pet image",
                                    "example": "https://www.akc.org/wp-content/uploads/2016/06/Beagle-standing-in-a-frosty-field-on-a-cold-morning.jpg"
                                },
                                "comments": {
                                    "type": "string",
                                    "description": "Comments",
                                    "example": "Selling a smart dog."
                                },
                                "owner": {
                                    "type": "string",
                                    "description": "ID owner notices",
                                    "example": "63b420f8613598919c6a71a8"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "description": "created",
                                    "example": "2023-02-01T13:49:03.447Z"
                                },
                                "updatedAt": {
                                    "type": "string",
                                    "description": "updated",
                                    "example": "2023-02-01T13:49:03.447Z"
                                }
                            }
                        }
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "total pages",
                        "example": 1
                    }
                }
            },
            "NoticeAddRequest": {
                "type": "object",
                "required": ["category", "title", "sex", "location"],
                "properties": {
                    "category": {
                        "type": "string",
                        "description": "Category by notice",
                        "example": "sell"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title by notice",
                        "example": "Rocky is looking for a new family"
                    },
                    "name": {
                        "type": "string",
                        "description": "Pets name",
                        "example": "Rocky"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "Pet of birthday",
                        "example": "02.02.2020"
                    },
                    "breed": {
                        "type": "string",
                        "description": "Breed of dogs",
                        "example": "beagle"
                    },
                    "sex": {
                        "type": "string",
                        "description": "Sex list: [Male, Female]",
                        "example": "Female"
                    },
                    "location": {
                        "type": "string",
                        "description": "Pet location",
                        "example": "Kyiv, Ukraine"
                    },
                    "price": {
                        "type": "integer",
                        "description": "Price",
                        "example": 5000
                    },
                    "imageURL": {
                        "type": "string",
                        "description": "Pet image",
                        "example": "https://www.akc.org/wp-content/uploads/2016/06/Beagle-standing-in-a-frosty-field-on-a-cold-morning.jpg"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comments",
                        "example": "Selling a smart dog."
                    }
                }
            },
            "NoticeAddResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "ID notice",
                        "example": "63b6ec81f474e0269d338e9e"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category by notice",
                        "example": "sell"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title by notice",
                        "example": "Rocky is looking for a new family"
                    },
                    "name": {
                        "type": "string",
                        "description": "Pets name",
                        "example": "Rocky"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "Pet of birthday",
                        "example": "02.02.2020"
                    },
                    "breed": {
                        "type": "string",
                        "description": "Breed of dogs",
                        "example": "beagle"
                    },
                    "location": {
                        "type": "string",
                        "description": "Pet location",
                        "example": "Kyiv, Ukraine"
                    },
                    "sex": {
                        "type": "string",
                        "description": "Sex list: [Male, Female]",
                        "example": "Female"
                    },
                    "price": {
                        "type": "integer",
                        "description": "Price",
                        "example": 5000
                    },
                    "imageURL": {
                        "type": "string",
                        "description": "Pet image",
                        "example": "https://www.akc.org/wp-content/uploads/2016/06/Beagle-standing-in-a-frosty-field-on-a-cold-morning.jpg"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comments",
                        "example": "Selling a smart dog."
                    },
                    "owner": {
                        "type": "string",
                        "description": "id owner",
                        "example": "63b420f8613598919c6a71a8"
                    },
                    "email": {
                        "type": "string",
                        "description": "User email",
                        "example": "user1@gmail.com"
                    },
                    "phone": {
                        "type": "string",
                        "description": "User phone",
                        "example": "+380000000000"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "created",
                        "example": "2023-02-01T13:49:03.447Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "updated",
                        "example": "2023-02-01T13:49:03.447Z"
                    }
                }
            },
            "UpdateFavoriteNoticeResponse": {
                "type": "object",
                "properties": {
                    "favorite": {
                        "type": "array",
                        "items": {
                            "type": "string",                        
                            "description": "ID notices",
                            "example": "[63b6ec81f474e0269d338e9e]"
                        }
                    },
                    "message": {
                        "type": "string",
                        "description": "ID notices",
                        "example": "Updated Favorite Notice"
                    }
                }
            },
            "RemoveNoticeFromFavoriteResponse": {
                "type": "object",
                "properties": {
                    "favorite": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "ID notices",
                        "example": "[63b6ec81f474e0269d338e9e]"
                    },
                    "message": {
                        "type": "string",
                        "description": "ID notices",
                        "example": "Notice deleted from favorite"
                    }
                }
            },
            "GetUserNoticesResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "id",
                        "example": "63b6ec81f474e0269d338e9e"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category by notice",
                        "example": "sell"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title by notice",
                        "example": "Rocky is looking for a new family"
                    },
                    "name": {
                        "type": "string",
                        "description": "Pets name",
                        "example": "Rocky"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "Pet of birthday",
                        "example": "02.02.2020"
                    },
                    "breed": {
                        "type": "string",
                        "description": "Breed of dogs",
                        "example": "beagle"
                    },
                    "location": {
                        "type": "string",
                        "description": "Pet location",
                        "example": "Kyiv, Ukraine"
                    },
                    "sex": {
                        "type": "string",
                        "description": "Sex list: [Male, Female]",
                        "example": "Female"
                    },
                    "price": {
                        "type": "integer",
                        "description": "Price",
                        "example": 5000
                    },
                    "imageURL": {
                        "type": "string",
                        "description": "Pet image",
                        "example": "https://www.akc.org/wp-content/uploads/2016/06/Beagle-standing-in-a-frosty-field-on-a-cold-morning.jpg"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comments",
                        "example": "Selling a smart dog."
                    },
                    "owner": {
                        "type": "string",
                        "description": "id owner",
                        "example": "63b420f8613598919c6a71a8"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "created",
                        "example": "2023-02-01T13:49:03.447Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "updated",
                        "example": "2023-02-01T13:49:03.447Z"
                    }
                }
            },
            "GetFavoriteNoticesResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "ID notice",
                        "example": "63b6ec81f474e0269d338e9e"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category by notice",
                        "example": "sell"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title by notice",
                        "example": "Rocky is looking for a new family"
                    },
                    "name": {
                        "type": "string",
                        "description": "Pets name",
                        "example": "Rocky"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "Pet of birthday",
                        "example": "02.02.2020"
                    },
                    "breed": {
                        "type": "string",
                        "description": "Breed of dogs",
                        "example": "beagle"
                    },
                    "location": {
                        "type": "string",
                        "description": "Pet location",
                        "example": "Kyiv, Ukraine"
                    },
                    "sex": {
                        "type": "string",
                        "description": "Sex list: [Male, Female]",
                        "example": "Female"
                    },
                    "price": {
                        "type": "integer",
                        "description": "Price",
                        "example": 5000
                    },
                    "imageURL": {
                        "type": "string",
                        "description": "Pet image",
                        "example": "https://www.akc.org/wp-content/uploads/2016/06/Beagle-standing-in-a-frosty-field-on-a-cold-morning.jpg"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comments",
                        "example": "Selling a smart dog."
                    },
                    "owner": {
                        "type": "string",
                        "description": "id owner",
                        "example": "63b420f8613598919c6a71a8"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "created",
                        "example": "2023-02-01T13:49:03.447Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "updated",
                        "example": "2023-02-01T13:49:03.447Z"
                    }
                }
            },
            "GetOneNoticeResponse": {
                "type": "object",
                "properties": {
                    "_id": {
                        "type": "string",
                        "description": "ID notice",
                        "example": "63b6ec81f474e0269d338e9e"
                    },
                    "category": {
                        "type": "string",
                        "description": "Category by notice",
                        "example": "sell"
                    },
                    "title": {
                        "type": "string",
                        "description": "Title by notice",
                        "example": "Rocky is looking for a new family"
                    },
                    "name": {
                        "type": "string",
                        "description": "Pets name",
                        "example": "Rocky"
                    },
                    "birthday": {
                        "type": "string",
                        "description": "Pet of birthday",
                        "example": "02.02.2020"
                    },
                    "breed": {
                        "type": "string",
                        "description": "Breed of dogs",
                        "example": "beagle"
                    },
                    "location": {
                        "type": "string",
                        "description": "Pet location",
                        "example": "Kyiv, Ukraine"
                    },
                    "sex": {
                        "type": "string",
                        "description": "Sex list: [Male, Female]",
                        "example": "Female"
                    },
                    "price": {
                        "type": "integer",
                        "description": "Price",
                        "example": 5000
                    },
                    "imageURL": {
                        "type": "string",
                        "description": "Pet image",
                        "example": "https://www.akc.org/wp-content/uploads/2016/06/Beagle-standing-in-a-frosty-field-on-a-cold-morning.jpg"
                    },
                    "comments": {
                        "type": "string",
                        "description": "Comments",
                        "example": "Selling a smart dog."
                    },
                    "owner": {
                        "type": "string",
                        "description": "id owner",
                        "example": "63b420f8613598919c6a71a8"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "created",
                        "example": "2023-02-01T13:49:03.447Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "description": "updated",
                        "example": "2023-02-01T13:49:03.447Z"
                    }
                }
            },
            "RemoveNoticeResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string",
                        "description": "Message about success deleted",
                        "example": "notice with id: 63b4217e613598919c6a71ad has been deleted"
                    }
                }
            }
        },

        "securitySchemes": {
            "Bearer": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}